--- a/block/bio.c
+++ b/block/bio.c
@@ -1355,11 +1355,21 @@ struct bio *bio_copy_user_iov(struct req
 	/*
 	 * success
 	 */
-	if (((iter->type & WRITE) && (!map_data || !map_data->null_mapped)) ||
-	    (map_data && map_data->from_user)) {
+	if (iov_iter_rw(iter) == WRITE && (!map_data || !map_data->null_mapped)) {
 		ret = bio_copy_from_iter(bio, *iter);
 		if (ret)
 			goto cleanup;
+	} else if (map_data && map_data->from_user) {
+		struct iov_iter iter2 = *iter;
+
+		/* This is the copy-in part of SG_DXFER_TO_FROM_DEV. */
+		iter2.data_source = ITER_SOURCE;
+		ret = bio_copy_from_iter(bio, iter2);
+		if (ret)
+			goto cleanup;
+	} else {
+		if (bmd->is_our_pages)
+			zero_fill_bio(bio);
 	}
 
 	bio->bi_private = bmd;
--- a/include/linux/uio.h
+++ b/include/linux/uio.h
@@ -28,6 +28,9 @@ enum {
 	ITER_PIPE = 8,
 };
 
+#define ITER_SOURCE     1       // == WRITE
+#define ITER_DEST       0       // == READ
+
 struct iov_iter {
 	int type;
 	size_t iov_offset;
